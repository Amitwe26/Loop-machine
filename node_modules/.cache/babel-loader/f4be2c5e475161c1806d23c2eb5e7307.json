{"ast":null,"code":"var _jsxFileName = \"/Users/amit/Desktop/Loop machine/src/pages/Home.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { BoxSound } from '../cmps/BoxSound';\nimport { audioService } from '../services/audioService';\nimport audio1 from '../sound/1.mp3';\nimport audio2 from '../sound/2.mp3';\nimport audio3 from '../sound/bass.mp3';\nimport audio4 from '../sound/electricguitar.mp3';\nimport audio5 from '../sound/5.mp3';\nimport audio6 from '../sound/GrooveB_120bpm_Tanggu.mp3';\nimport audio7 from '../sound/MazePolitics_120_Perc.mp3';\nimport audio8 from '../sound/PAS3GROOVE1.03B.mp3';\nimport audio9 from '../sound/SilentStar_120_Em_OrganSynth.mp3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Home() {\n  _s();\n\n  const [isOn, setIsOn] = useState(false);\n  const [audios, setAudios] = useState([]);\n  const [toggleLoop, setToggleLoop] = useState(false);\n  let soundPaths = [audio1, audio2, audio3, audio4, audio5, audio6, audio7, audio8, audio9];\n  useEffect(() => {\n    setAudios(audioService.queryAudios());\n  }, []);\n  useEffect(() => {\n    if (isOn) {\n      const newAudios = audios === null || audios === void 0 ? void 0 : audios.map(audio => audio.isWaiting && !audio.play ? { ...audio,\n        isWaiting: false,\n        play: true\n      } : audio);\n      setAudios(newAudios);\n    }\n  }, [isOn]);\n\n  function onPlay() {\n    if (!isOn) {\n      const readyToPlay = audios.some(audio => audio.isWaiting);\n      if (!readyToPlay) return;\n    }\n\n    setIsOn(!isOn);\n\n    if (isOn) {\n      setIsOn(false);\n      const newAudios = audios.map(audio => ({ ...audio,\n        isWaiting: false,\n        play: false\n      }));\n      setAudios(newAudios);\n    }\n  }\n\n  useEffect(() => {\n    if (isOn) {\n      const audioPlaying = audios === null || audios === void 0 ? void 0 : audios.some(audio => audio.play);\n      console.log('audioPlaying is:', audioPlaying);\n      if (audioPlaying) return;\n    }\n\n    if (isOn) {\n      const noPlaying = audios.every(audio => audio.play === false);\n      if (noPlaying) setIsOn(false);\n    }\n  }, [audios]);\n\n  function newToggle() {\n    setToggleLoop(!toggleLoop);\n  }\n\n  function updateAudio(key, info) {\n    if (key === 'waiting') {\n      const newAudios = audios.map(audio => audio.id === info.id ? { ...audio,\n        isWaiting: true\n      } : audio);\n      setAudios(newAudios);\n    } else if (key === 'stop') {\n      let newAudios = audios.map(audio => audio.id === info.id ? { ...audio,\n        isWaiting: false,\n        play: false\n      } : audio);\n      const whoWait = audios.filter(audio => audio.isWaiting);\n      console.log('whowait', whoWait);\n\n      if (whoWait.length >= 2) {\n        newAudios = newAudios.forEach(audio => audio.isWaiting && audio.id === info.id ? { ...audio,\n          isWaiting: false\n        } : audio);\n        setAudios(newAudios);\n        return;\n      }\n\n      newAudios = newAudios.map(audio => audio.isWaiting ? { ...audio,\n        isWaiting: false,\n        play: true\n      } : audio);\n      setAudios(newAudios);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loop Machine \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn-box\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onPlay(),\n        className: `button ${isOn ? 'stop' : ''} `\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: audios.map((audio, idx) => {\n        return /*#__PURE__*/_jsxDEV(BoxSound, {\n          info: audio,\n          src: soundPaths[idx],\n          isOn: isOn,\n          updateAudio: updateAudio,\n          endOfLoop: newToggle\n        }, audio.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Home, \"Du6dBGz/VB8ZxeXEgWRCgNxog60=\");\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/amit/Desktop/Loop machine/src/pages/Home.jsx"],"names":["useEffect","useState","BoxSound","audioService","audio1","audio2","audio3","audio4","audio5","audio6","audio7","audio8","audio9","Home","isOn","setIsOn","audios","setAudios","toggleLoop","setToggleLoop","soundPaths","queryAudios","newAudios","map","audio","isWaiting","play","onPlay","readyToPlay","some","audioPlaying","console","log","noPlaying","every","newToggle","updateAudio","key","info","id","whoWait","filter","length","forEach","idx"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\nimport { BoxSound } from '../cmps/BoxSound';\nimport { audioService } from '../services/audioService';\nimport audio1 from '../sound/1.mp3'\nimport audio2 from '../sound/2.mp3'\nimport audio3 from '../sound/bass.mp3'\nimport audio4 from '../sound/electricguitar.mp3'\nimport audio5 from '../sound/5.mp3'\nimport audio6 from '../sound/GrooveB_120bpm_Tanggu.mp3'\nimport audio7 from '../sound/MazePolitics_120_Perc.mp3'\nimport audio8 from '../sound/PAS3GROOVE1.03B.mp3'\nimport audio9 from '../sound/SilentStar_120_Em_OrganSynth.mp3'\n\nexport function Home() {\n    const [isOn, setIsOn] = useState(false)\n    const [audios, setAudios] = useState([])\n    const [toggleLoop, setToggleLoop] = useState(false)\n    let soundPaths = [audio1, audio2, audio3, audio4, audio5, audio6, audio7, audio8, audio9]\n\n    useEffect(() => {\n        setAudios(audioService.queryAudios())\n    }, [])\n\n    useEffect(() => {\n        if (isOn) {\n            const newAudios = audios?.map(audio =>\n                audio.isWaiting && !audio.play\n                    ? { ...audio, isWaiting: false, play: true }\n                    : audio\n            );\n            setAudios(newAudios)\n        }\n    }, [isOn])\n\n\n\n\n    function onPlay() {\n        if (!isOn) {\n            const readyToPlay = audios.some(audio => audio.isWaiting)\n            if (!readyToPlay) return\n        }\n        setIsOn(!isOn)\n        if (isOn) {\n            setIsOn(false)\n            const newAudios = audios.map(audio => ({ ...audio, isWaiting: false, play: false }))\n            setAudios(newAudios)\n        }\n    }\n    useEffect(() => {\n        if (isOn) {\n            const audioPlaying = audios?.some(audio => audio.play)\n            console.log('audioPlaying is:', audioPlaying);\n            if (audioPlaying) return\n        }\n        if (isOn) {\n            const noPlaying = audios.every(audio => audio.play === false)\n            if (noPlaying) setIsOn(false)\n\n        }\n    }, [audios])\n\n    function newToggle() {\n        setToggleLoop(!toggleLoop)\n    }\n\n    function updateAudio(key, info) {\n        if (key === 'waiting') {\n            const newAudios = audios.map(audio =>\n                audio.id === info.id\n                    ? { ...audio, isWaiting: true }\n                    : audio\n            );\n            setAudios(newAudios)\n        } else if (key === 'stop') {\n            let newAudios = audios.map(audio =>\n                audio.id === info.id\n                    ? { ...audio, isWaiting: false, play: false }\n                    : audio\n            );\n            const whoWait = audios.filter(audio => audio.isWaiting)\n            console.log('whowait', whoWait);\n            if (whoWait.length >= 2) {\n                newAudios = newAudios.forEach(audio =>\n                    audio.isWaiting && audio.id === info.id\n                        ? { ...audio, isWaiting: false }\n                        : audio\n                );\n                setAudios(newAudios)\n                return\n            }\n            newAudios = newAudios.map(audio =>\n                audio.isWaiting\n                    ? { ...audio, isWaiting: false, play: true }\n                    : audio\n            );\n            setAudios(newAudios)\n\n        }\n\n    }\n\n\n    return (\n        <div className=\"page\">\n            <h1>Loop Machine </h1>\n            <div className=\"btn-box\">\n                <button onClick={() => onPlay()} className={`button ${isOn ? 'stop' : ''} `}></button>\n            </div>\n            <div className=\"container\">\n                {audios.map((audio, idx) => {\n                    return (\n                        <BoxSound\n                            key={audio.id}\n                            info={audio}\n                            src={soundPaths[idx]}\n                            isOn={isOn}\n                            updateAudio={updateAudio}\n                            endOfLoop={newToggle}\n                        />\n                    )\n                })}\n\n            </div>\n        </div>\n\n    )\n}"]},"metadata":{},"sourceType":"module"}