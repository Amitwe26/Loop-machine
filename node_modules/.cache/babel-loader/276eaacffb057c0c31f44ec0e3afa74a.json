{"ast":null,"code":"var _jsxFileName = \"/Users/amit/Desktop/Loop machine/src/cmps/BoxSound.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport useSound from 'use-sound';\nimport image from '../assets/image/btn_Repeat_One-2-512.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function BoxSound({\n  info,\n  isOn,\n  updateAudio,\n  src,\n  endOfLoop\n}) {\n  _s();\n\n  // const [looping, setLooping] = useState(true)\n  const [volume, setVolume] = useState(0.5);\n  const [Play, audioInfo] = useSound(src, {\n    loop: [true, info.id],\n    volume,\n    duration: 8,\n    onend: () => {\n      console.log('Sound ended!');\n      endOfLoop();\n    }\n  });\n  useEffect(() => {\n    if (info.play) {\n      Play();\n    }\n  }, [info]);\n  useEffect(() => {\n    if (!isOn) {\n      audioInfo.stop();\n    }\n  }, [isOn]);\n\n  function playSquare(ev) {\n    ev.stopPropagation();\n\n    if (info.isWaiting || info.play) {\n      audioInfo.stop();\n      updateAudio('stop', info, audioInfo);\n      return;\n    }\n\n    updateAudio('waiting', info, audioInfo);\n  }\n\n  function toggleLooping(ev) {\n    ev.stopPropagation();\n    setLooping(!looping);\n  }\n\n  function handleChangeVolume(ev) {\n    ev.stopPropagation();\n    const volume = +(ev.target.value / 10);\n    setVolume(volume);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `square ${info.play ? 'squareOn' : ''}${info.isWaiting ? 'wait' : ''}`,\n    onClick: ev => playSquare(ev),\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: info.type\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"range\",\n      min: \"0\",\n      max: \"10\",\n      className: \"round\",\n      onChange: ev => handleChangeVolume(ev)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n\n_s(BoxSound, \"IorfbErWfvMyhbXjYCSpfNVr74M=\", false, function () {\n  return [useSound];\n});\n\n_c = BoxSound;\n\nvar _c;\n\n$RefreshReg$(_c, \"BoxSound\");","map":{"version":3,"sources":["/Users/amit/Desktop/Loop machine/src/cmps/BoxSound.jsx"],"names":["React","useEffect","useState","useSound","image","BoxSound","info","isOn","updateAudio","src","endOfLoop","volume","setVolume","Play","audioInfo","loop","id","duration","onend","console","log","play","stop","playSquare","ev","stopPropagation","isWaiting","toggleLooping","setLooping","looping","handleChangeVolume","target","value","type"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,KAAP,MAAkB,0CAAlB;;AAEA,OAAO,SAASC,QAAT,CAAkB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,IAAR;AAAcC,EAAAA,WAAd;AAA2BC,EAAAA,GAA3B;AAAgCC,EAAAA;AAAhC,CAAlB,EAA+D;AAAA;;AAClE;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,GAAD,CAApC;AACA,QAAM,CAACW,IAAD,EAAOC,SAAP,IAAoBX,QAAQ,CAACM,GAAD,EAAM;AACpCM,IAAAA,IAAI,EAAE,CAAC,IAAD,EAAOT,IAAI,CAACU,EAAZ,CAD8B;AAEpCL,IAAAA,MAFoC;AAGpCM,IAAAA,QAAQ,EAAE,CAH0B;AAIpCC,IAAAA,KAAK,EAAE,MAAM;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAV,MAAAA,SAAS;AACZ;AAPmC,GAAN,CAAlC;AAUAT,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIK,IAAI,CAACe,IAAT,EAAe;AACXR,MAAAA,IAAI;AACP;AACJ,GAJQ,EAIN,CAACP,IAAD,CAJM,CAAT;AAMAL,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI,CAACM,IAAL,EAAW;AACPO,MAAAA,SAAS,CAACQ,IAAV;AACH;AACJ,GAJQ,EAIN,CAACf,IAAD,CAJM,CAAT;;AAMA,WAASgB,UAAT,CAAoBC,EAApB,EAAwB;AACpBA,IAAAA,EAAE,CAACC,eAAH;;AAEA,QAAKnB,IAAI,CAACoB,SAAL,IAAkBpB,IAAI,CAACe,IAA5B,EAAmC;AAC/BP,MAAAA,SAAS,CAACQ,IAAV;AACAd,MAAAA,WAAW,CAAC,MAAD,EAASF,IAAT,EAAeQ,SAAf,CAAX;AACA;AACH;;AACDN,IAAAA,WAAW,CAAC,SAAD,EAAYF,IAAZ,EAAkBQ,SAAlB,CAAX;AACH;;AAED,WAASa,aAAT,CAAuBH,EAAvB,EAA2B;AACvBA,IAAAA,EAAE,CAACC,eAAH;AACAG,IAAAA,UAAU,CAAC,CAACC,OAAF,CAAV;AACH;;AAED,WAASC,kBAAT,CAA4BN,EAA5B,EAAgC;AAC5BA,IAAAA,EAAE,CAACC,eAAH;AACA,UAAMd,MAAM,GAAG,EAAEa,EAAE,CAACO,MAAH,CAAUC,KAAV,GAAkB,EAApB,CAAf;AACApB,IAAAA,SAAS,CAACD,MAAD,CAAT;AACH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAG,UAAUL,IAAI,CAACe,IAAN,GAAc,UAAd,GAA2B,EAAG,GAAEf,IAAI,CAACoB,SAAL,GAAiB,MAAjB,GAA0B,EAAG,EAAvF;AAA0F,IAAA,OAAO,EAAGF,EAAD,IAAQD,UAAU,CAACC,EAAD,CAArH;AAAA,4BACI;AAAA,gBAAKlB,IAAI,CAAC2B;AAAV;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,GAAG,EAAC,GAAxB;AAA4B,MAAA,GAAG,EAAC,IAAhC;AAAqC,MAAA,SAAS,EAAC,OAA/C;AAAuD,MAAA,QAAQ,EAAGT,EAAD,IAAQM,kBAAkB,CAACN,EAAD;AAA3F;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;;GAxDenB,Q;UAGcF,Q;;;KAHdE,Q","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport useSound from 'use-sound'\nimport image from '../assets/image/btn_Repeat_One-2-512.png'\n\nexport function BoxSound({ info, isOn, updateAudio, src, endOfLoop }) {\n    // const [looping, setLooping] = useState(true)\n    const [volume, setVolume] = useState(0.5);\n    const [Play, audioInfo] = useSound(src, {\n        loop: [true, info.id],\n        volume,\n        duration: 8,\n        onend: () => {\n            console.log('Sound ended!');\n            endOfLoop()\n        },\n    })\n\n    useEffect(() => {\n        if (info.play) {\n            Play()\n        }\n    }, [info])\n\n    useEffect(() => {\n        if (!isOn) {\n            audioInfo.stop()\n        }\n    }, [isOn])\n\n    function playSquare(ev) {\n        ev.stopPropagation();\n\n        if ((info.isWaiting || info.play)) {\n            audioInfo.stop()\n            updateAudio('stop', info, audioInfo)\n            return\n        }\n        updateAudio('waiting', info, audioInfo)\n    }\n\n    function toggleLooping(ev) {\n        ev.stopPropagation();\n        setLooping(!looping)\n    }\n\n    function handleChangeVolume(ev) {\n        ev.stopPropagation()\n        const volume = +(ev.target.value / 10)\n        setVolume(volume)\n    }\n\n    return (\n        <div className={`square ${(info.play) ? 'squareOn' : ''}${info.isWaiting ? 'wait' : ''}`} onClick={(ev) => playSquare(ev)}>\n            <h2>{info.type}</h2>\n            {/* <span className={`infinity ${!looping ? 'loopOff' : ''}`} onClick={(ev) => toggleLooping(ev)} title=\"Loop\">\n                <img className=\"image-loop\" title='One-time' src={image} alt=\"loop-1\" />\n            </span> */}\n            <input type=\"range\" min=\"0\" max=\"10\" className=\"round\" onChange={(ev) => handleChangeVolume(ev)} />\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}